!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("@angular/fire/auth"),require("firebaseui-en-es/dist/npm__es"),require("firebaseui-en-es/dist/npm__en"),require("firebase/app"),require("firebase/auth"),require("@angular/common")):"function"==typeof define&&define.amd?define("firebaseui-angular",["exports","@angular/core","@angular/fire/auth","firebaseui-en-es/dist/npm__es","firebaseui-en-es/dist/npm__en","firebase/app","firebase/auth","@angular/common"],r):r(e["firebaseui-angular"]={},e.ng.core,e.ng.fire.auth,e.firebaseuiEs,e.firebaseuiEn,e.firebase,null,e.ng.common)}(this,function(e,a,r,o,s,i,t,n){"use strict";var u=function(){function e(e){window.firebaseUiEnInstance||(window.firebaseUiEnInstance=new s.auth.AuthUI(e.auth),window.firebaseUiEsInstance=new o.auth.AuthUI(e.auth)),this.firebaseUiEnInstance=window.firebaseUiEnInstance,this.firebaseUiEsInstance=window.firebaseUiEsInstance}return e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:r.AngularFireAuth}]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e(a.inject(r.AngularFireAuth))},token:e,providedIn:"root"}),e}(),C=function(){return(C=Object.assign||function(e){for(var r,i=1,t=arguments.length;i<t;i++)for(var n in r=arguments[i])Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n]);return e}).apply(this,arguments)};var c=i,l=o,f=function R(){},h=function w(){},p=function _(){},g=function D(){},A={AccountChooser:0,OneTap:1,None:2};A[A.AccountChooser]="AccountChooser",A[A.OneTap]="OneTap",A[A.None]="None";var b={Google:0,Facebook:1,Twitter:2,Github:3,Password:4,Phone:5};b[b.Google]="Google",b[b.Facebook]="Facebook",b[b.Twitter]="Twitter",b[b.Github]="Github",b[b.Password]="Password",b[b.Phone]="Phone";var U={Popup:0,Redirect:1};U[U.Popup]="Popup",U[U.Redirect]="Redirect";var d=i.auth.GoogleAuthProvider,I=i.auth.FacebookAuthProvider,P=i.auth.TwitterAuthProvider,y=i.auth.GithubAuthProvider,O=i.auth.EmailAuthProvider,m=i.auth.PhoneAuthProvider,v=function(){function v(e,r,i,t,n){this.angularFireAuth=e,this._firebaseUiConfig=r,this._firebaseUiConfig_Feature=i,this.ngZone=t,this.firebaseUIService=n,this.signInSuccessCallback=new a.EventEmitter,this.signInSuccessWithAuthResultCallback=new a.EventEmitter,this.signInFailureCallback=new a.EventEmitter,(this.language="en")===this.language?this.firebaseuiLibrary=s:"es"===this.language?this.firebaseuiLibrary=o:console.error('Language must be either "en" or "es"')}return v.getAuthProvider=function(e){switch(e){case b.Google:return d.PROVIDER_ID;case b.Facebook:return I.PROVIDER_ID;case b.Twitter:return P.PROVIDER_ID;case b.Github:return y.PROVIDER_ID;case b.Password:return O.PROVIDER_ID;case b.Phone:return m.PROVIDER_ID}},Object.defineProperty(v.prototype,"firebaseUiConfig",{get:function(){return C({},this._firebaseUiConfig,this._firebaseUiConfig_Feature)},enumerable:!0,configurable:!0}),v.prototype.ngOnInit=function(){var r=this;this.subscription=this.angularFireAuth.authState.subscribe(function(e){if(e&&e.isAnonymous||!e)if(r.firebaseUiConfig.providers){if(console.warn('"FirebaseUIAuthConfig" isn\'t supported since version 3.3.0 and will be removed in the future.\nPlease use the native configuration of firebaseui "firebaseui.auth.Config"'),console.warn("You can copy your converted configuration:\n",r.getNewConfigurationString(r.getUIAuthConfig())),0===r.firebaseUiConfig.providers.length)throw new Error("There must be at least one AuthProvider.");r.firebaseUIPopup()}else{if(0===r.firebaseUiConfig.signInOptions.length)throw new Error("There must be at least one AuthProvider.");r.firebaseUIPopup()}})},v.prototype.ngOnDestroy=function(){this.subscription&&this.subscription.unsubscribe()},v.prototype.getUIAuthConfig=function(){var e,r,t=this;if(!this.firebaseUiConfig.providers)return this.firebaseUiConfig.callbacks||(this._firebaseUiConfig[v.COMPUTED_CALLBACKS]=!0,this._firebaseUiConfig.callbacks=this.getCallbacks()),this.firebaseUiConfig;var n=this.firebaseUiConfig,i=[];try{for(var a=function d(e){var r="function"==typeof Symbol&&e[Symbol.iterator],i=0;return r?r.call(e):{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}}}(n.providers),o=a.next();!o.done;o=a.next()){var s=o.value;if(s.customConfig){var u=(s=s).customConfig;u.provider=v.getAuthProvider(s.provider),i.push(u)}else i.push(v.getAuthProvider(s))}}catch(I){e={error:I}}finally{try{o&&!o.done&&(r=a["return"])&&r.call(a)}finally{if(e)throw e.error}}var c,l=n.tos?n.tos:"",f=n.privacyPolicyUrl?n.privacyPolicyUrl:"",h="popup";switch(n.method){case U.Redirect:h="redirect";break;case null:case U.Popup:}switch(n.credentialHelper){case A.None:c=this.firebaseuiLibrary.auth.CredentialHelper.NONE;break;case A.OneTap:c=this.firebaseuiLibrary.auth.CredentialHelper.GOOGLE_YOLO;break;case A.AccountChooser:default:c=this.firebaseuiLibrary.auth.CredentialHelper.ACCOUNT_CHOOSER_COM}var p=null!=n.autoUpgradeAnonymousUsers&&n.autoUpgradeAnonymousUsers,g=C({},this.getCallbacks(),{signInSuccess:null});n.disableSignInSuccessCallback||(console.warn("[FirebaseUiAngular] signInSuccess callback is deprecated. Please use signInSuccessWithAuthResult callback instead.\nTo remove this warning set disableSignInSuccessCallback on the FirebaseUiConfig Object."),g.signInSuccess=function(e,r,i){return t.ngZone.run(function(){t.signInSuccessCallback.emit({currentUser:e,credential:r,redirectUrl:i})}),!!n.signInSuccessUrl});var b={callbacks:g,signInFlow:h,signInOptions:i,tosUrl:l,privacyPolicyUrl:f,credentialHelper:c,autoUpgradeAnonymousUsers:p};return n.signInSuccessUrl&&(b.signInSuccessUrl=n.signInSuccessUrl),b},v.prototype.firebaseUIPopup=function(){var e="en"===this.language?this.firebaseUIService.firebaseUiEnInstance:this.firebaseUIService.firebaseUiEsInstance,r=this.getUIAuthConfig(),i=!1;r[v.COMPUTED_CALLBACKS]&&(i=!0,delete r[v.COMPUTED_CALLBACKS]),e.start("#firebaseui-auth-container",r),i&&(this._firebaseUiConfig.callbacks=null)},v.prototype.getCallbacks=function(){var i=this;return{signInSuccessWithAuthResult:function(e,r){return i.ngZone.run(function(){i.signInSuccessWithAuthResultCallback.emit({authResult:e,redirectUrl:r})}),i.firebaseUiConfig.signInSuccessUrl},signInFailure:function(e){return i.ngZone.run(function(){i.signInFailureCallback.emit({code:e.code,credential:e.credential})}),Promise.reject()}}},v.prototype.getNewConfigurationString=function(e){delete e.callbacks,e.autoUpgradeAnonymousUsers||delete e.autoUpgradeAnonymousUsers;var r=JSON.stringify(e,null,2);return r=(r=(r=(r=(r=(r=(r=(r=(r=(r=(r=(r=(r=(r=(r=(r=(r=r.replace('"credentialHelper": "accountchooser.com"','"credentialHelper": firebaseui.auth.CredentialHelper.ACCOUNT_CHOOSER_COM')).replace('"credentialHelper": "googleyolo"','"credentialHelper": firebaseui.auth.CredentialHelper.GOOGLE_YOLO')).replace('"credentialHelper": "none"','"credentialHelper": firebaseui.auth.CredentialHelper.NONE')).replace('"provider": "google.com"','"provider": firebase.auth.GoogleAuthProvider.PROVIDER_ID')).replace('"provider": "facebook.com"','"provider": firebase.auth.FacebookAuthProvider.PROVIDER_ID')).replace('"provider": "twitter.com"','"provider": firebase.auth.TwitterAuthProvider.PROVIDER_ID')).replace('"provider": "github.com"','"provider": firebase.auth.GithubAuthProvider.PROVIDER_ID')).replace('"provider": "password"','"provider": firebase.auth.EmailAuthProvider.PROVIDER_ID')).replace('"provider": "phone"','"provider": firebase.auth.PhoneAuthProvider.PROVIDER_ID')).replace('"google.com"',"firebase.auth.GoogleAuthProvider.PROVIDER_ID")).replace('"facebook.com"',"firebase.auth.FacebookAuthProvider.PROVIDER_ID")).replace('"twitter.com"',"firebase.auth.TwitterAuthProvider.PROVIDER_ID")).replace('"github.com"',"firebase.auth.TwitterAuthProvider.PROVIDER_ID")).replace('"password"',"firebase.auth.EmailAuthProvider.PROVIDER_ID")).replace('"phone"',"firebase.auth.PhoneAuthProvider.PROVIDER_ID")).replace(/"([a-zA-Z0-9]*)": (.*)/g,"$1: $2")).replace(/"/g,"'")},v.COMPUTED_CALLBACKS="COMPUTED_CALLBACKS",v.decorators=[{type:a.Component,args:[{selector:"firebase-ui",template:'<div id="firebaseui-auth-container"></div>'}]}],v.ctorParameters=function(){return[{type:r.AngularFireAuth},{type:undefined,decorators:[{type:a.Inject,args:["firebaseUIAuthConfig"]}]},{type:undefined,decorators:[{type:a.Inject,args:["firebaseUIAuthConfigFeature"]}]},{type:a.NgZone},{type:u}]},v.propDecorators={signInSuccessCallback:[{type:a.Output,args:["signInSuccess"]}],signInSuccessWithAuthResultCallback:[{type:a.Output,args:["signInSuccessWithAuthResult"]}],signInFailureCallback:[{type:a.Output,args:["signInFailure"]}],language:[{type:a.Input,args:["language"]}]},v}(),E=function(){function r(){}return r.forRoot=function(e){return{ngModule:r,providers:[{provide:"firebaseUIAuthConfig",useValue:e},{provide:"firebaseUIAuthConfigFeature",useValue:{}}]}},r.forFeature=function(e){return{ngModule:r,providers:[{provide:"firebaseUIAuthConfigFeature",useValue:e}]}},r.decorators=[{type:a.NgModule,args:[{imports:[n.CommonModule],declarations:[v],exports:[v]}]}],r}();e.FirebaseuiAngularLibraryService=u,e.FirebaseuiAngularLibraryComponent=v,e.firebase=c,e.firebaseui=l,e.FirebaseUIAuthConfig=f,e.FirebaseUISignInSuccessWithAuthResult=h,e.FirebaseUISignInFailure=p,e.FirebaseUISignInSuccess=g,e.CredentialHelper=A,e.AuthProvider=b,e.AuthMethods=U,e.FirebaseUIModule=E,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=firebaseui-angular.umd.min.js.map