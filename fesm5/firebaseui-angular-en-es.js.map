{"version":3,"file":"firebaseui-angular-en-es.js","sources":["ng://firebaseui-angular-en-es/lib/firebaseui-angular-library.service.ts","ng://firebaseui-angular-en-es/lib/firebaseui-angular-library.helper.ts","ng://firebaseui-angular-en-es/lib/firebaseui-angular-library.component.ts","ng://firebaseui-angular-en-es/lib/firebaseui-angular-library.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport * as firebaseuiEs from 'firebaseui-en-es/dist/npm__es';\nimport * as firebaseuiEn from 'firebaseui-en-es/dist/npm__en';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseuiAngularLibraryService {\n  // public firebaseUiInstance: firebaseuiEn.auth.AuthUI | firebaseuiEs.auth.AuthUI;\n  public firebaseUiInstance: firebaseuiEs.auth.AuthUI;\n  public currentLanguage: 'en' | 'es';\n\n  constructor( private angularFireAuth: AngularFireAuth ) {}\n\n  async getInstance( language: 'en' | 'es' ) {\n    // return the existing UI instance if it's in the correct language\n    if ( this.currentLanguage === language ) {\n      return this.firebaseUiInstance;\n    }\n    // delete the current UI instance if one already exists\n    this.currentLanguage = language;\n    if ( (<any>window).firebaseUiInstance ) {\n      await ((<any>window).firebaseUiInstance as firebaseuiEs.auth.AuthUI).delete();\n    }\n    if ( language === 'en' ) {\n      (<any>window).firebaseUiInstance = new ( await import('firebaseui-en-es/dist/npm__en') ).auth.AuthUI( this.angularFireAuth.auth );\n    } else {\n      (<any>window).firebaseUiInstance = new ( await import('firebaseui-en-es/dist/npm__es') ).auth.AuthUI( this.angularFireAuth.auth );\n    }\n    this.firebaseUiInstance = (<any>window).firebaseUiInstance;\n    return this.firebaseUiInstance;\n  }\n}\n","/*\n * Created by Raphael Jenni\n * Copyright (c) 2017 Raphael Jenni\n */\n\nimport * as firebaseOriginal from 'firebase/app';\nimport UserCredential = firebase.auth.UserCredential;\nimport * as firebaseuiOriginal from 'firebaseui-en-es/dist/npm__es';\n\nexport const firebase = firebaseOriginal;\nexport const firebaseui = firebaseuiOriginal;\n\n/**\n * @deprecated Please use native configuration of firebaseui (firebaseui.auth.Config)\n */\nexport class FirebaseUIAuthConfig {\n  providers: Array<AuthProvider | AuthProviderWithCustomConfig>;\n  method?: AuthMethods;\n  signInSuccessUrl?: string;\n  tos?: string;\n  privacyPolicyUrl?: string;\n  credentialHelper?: CredentialHelper;\n  autoUpgradeAnonymousUsers?: boolean;\n\n  /**\n   * Will be default in the future\n   */\n  disableSignInSuccessCallback?: boolean;\n}\n\nexport type NativeFirebaseUIAuthConfig = firebaseuiOriginal.auth.Config;\n\n\nexport class FirebaseUISignInSuccessWithAuthResult {\n  authResult: UserCredential;\n  redirectUrl: string;\n}\n\nexport class FirebaseUISignInFailure {\n  code: string;\n  credential: firebaseOriginal.auth.AuthCredential;\n}\n\n/**\n * @deprecated Use {@link FirebaseUISignInSuccessWithAuthResult}\n */\nexport class FirebaseUISignInSuccess {\n  currentUser: firebaseOriginal.User;\n  credential: firebaseOriginal.auth.AuthCredential;\n  redirectUrl: string;\n}\n\n\nexport enum CredentialHelper {\n  AccountChooser, OneTap, None\n}\n\nexport enum AuthProvider {\n  Google, Facebook, Twitter, Github, Password, Phone\n}\n\nexport interface AuthProviderWithCustomConfig {\n  provider: AuthProvider;\n  customConfig: Object;\n}\n\nexport enum AuthMethods {\n  Popup, Redirect\n}\n","import {Component, EventEmitter, Inject, NgZone, OnDestroy, OnInit, OnChanges, Output, Input, SimpleChanges} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {Subscription} from 'rxjs';\nimport {\n  AuthMethods,\n  AuthProvider,\n  AuthProviderWithCustomConfig,\n  CredentialHelper,\n  FirebaseUIAuthConfig,\n  FirebaseUISignInFailure,\n  FirebaseUISignInSuccess,\n  FirebaseUISignInSuccessWithAuthResult,\n  NativeFirebaseUIAuthConfig,\n} from './firebaseui-angular-library.helper';\nimport * as firebaseuiEs from 'firebaseui-en-es/dist/npm__es';\nimport * as firebaseuiEn from 'firebaseui-en-es/dist/npm__en';\n// noinspection ES6UnusedImports\nimport * as firebase from 'firebase/app';\nimport {User} from 'firebase/app';\nimport {FirebaseuiAngularLibraryService} from './firebaseui-angular-library.service';\nimport 'firebase/auth';\nimport GoogleAuthProvider = firebase.auth.GoogleAuthProvider;\nimport FacebookAuthProvider = firebase.auth.FacebookAuthProvider;\nimport TwitterAuthProvider = firebase.auth.TwitterAuthProvider;\nimport GithubAuthProvider = firebase.auth.GithubAuthProvider;\nimport EmailAuthProvider = firebase.auth.EmailAuthProvider;\nimport PhoneAuthProvider = firebase.auth.PhoneAuthProvider;\nimport UserCredential = firebase.auth.UserCredential;\n\n@Component({\n  selector: 'firebase-ui',\n  template: '<div id=\"firebaseui-auth-container\"></div>'\n})\nexport class FirebaseuiAngularLibraryComponent implements OnInit, OnDestroy, OnChanges {\n  private static readonly COMPUTED_CALLBACKS = 'COMPUTED_CALLBACKS';\n\n  /**\n   * @deprecated Use signInSuccessWithAuthResult\n   */\n  @Output('signInSuccess') signInSuccessCallback: EventEmitter<FirebaseUISignInSuccess> = new EventEmitter(); // tslint:disable-line\n\n  @Output('signInSuccessWithAuthResult') signInSuccessWithAuthResultCallback: EventEmitter<FirebaseUISignInSuccessWithAuthResult> = new EventEmitter(); // tslint:disable-line\n  @Output('signInFailure') signInFailureCallback: EventEmitter<FirebaseUISignInFailure> = new EventEmitter(); // tslint:disable-line\n  // language must be either 'en' or 'es'\n  @Input() language: 'en' | 'es' = 'en';\n\n  private subscription: Subscription;\n\n  private firebaseuiLibrary: any;\n\n  private static getAuthProvider(provider: AuthProvider): string {\n    switch (provider) {\n      case AuthProvider.Google:\n        return GoogleAuthProvider.PROVIDER_ID;\n      case AuthProvider.Facebook:\n        return FacebookAuthProvider.PROVIDER_ID;\n      case AuthProvider.Twitter:\n        return TwitterAuthProvider.PROVIDER_ID;\n      case AuthProvider.Github:\n        return GithubAuthProvider.PROVIDER_ID;\n      case AuthProvider.Password:\n        return EmailAuthProvider.PROVIDER_ID;\n      case AuthProvider.Phone:\n        return PhoneAuthProvider.PROVIDER_ID;\n    }\n  }\n\n  constructor(private angularFireAuth: AngularFireAuth,\n              @Inject('firebaseUIAuthConfig') private _firebaseUiConfig: NativeFirebaseUIAuthConfig | FirebaseUIAuthConfig,\n              @Inject('firebaseUIAuthConfigFeature') private _firebaseUiConfig_Feature: NativeFirebaseUIAuthConfig | FirebaseUIAuthConfig,\n              private ngZone: NgZone,\n              private firebaseUIService: FirebaseuiAngularLibraryService) {}\n\n  async ngOnChanges( changes: SimpleChanges ) {\n    if ( changes.language ) {\n      if ( this.language === 'en' ) {\n        this.firebaseuiLibrary = await import('firebaseui-en-es/dist/npm__en');\n      } else if ( this.language === 'es' ) {\n        this.firebaseuiLibrary = await import('firebaseui-en-es/dist/npm__es');\n      } else {\n        console.error( 'Language must be either \"en\" or \"es\"' );\n      }\n    }\n    (<any>window).firebaseui = this.firebaseuiLibrary;\n  }\n\n  get firebaseUiConfig(): NativeFirebaseUIAuthConfig | FirebaseUIAuthConfig {\n    return {\n      ...this._firebaseUiConfig,\n      ...this._firebaseUiConfig_Feature\n    } as NativeFirebaseUIAuthConfig | FirebaseUIAuthConfig;\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.angularFireAuth.authState.subscribe((value: User) => {\n      if ((value && value.isAnonymous) || !value) {\n        if ((this.firebaseUiConfig as FirebaseUIAuthConfig).providers) {\n          // tslint:disable-next-line\n          console.warn(`\"FirebaseUIAuthConfig\" isn't supported since version 3.3.0 and will be removed in the future.\\nPlease use the native configuration of firebaseui \"firebaseui.auth.Config\"`);\n          console.warn('You can copy your converted configuration:\\n', this.getNewConfigurationString(this.getUIAuthConfig()));\n\n          if ((this.firebaseUiConfig as FirebaseUIAuthConfig).providers.length !== 0) {\n            this.firebaseUIPopup();\n          } else {\n            throw new Error('There must be at least one AuthProvider.');\n          }\n        } else {\n          if ((this.firebaseUiConfig as NativeFirebaseUIAuthConfig).signInOptions.length !== 0) {\n            this.firebaseUIPopup();\n          } else {\n            throw new Error('There must be at least one AuthProvider.');\n          }\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (!!this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  private getUIAuthConfig(): NativeFirebaseUIAuthConfig {\n    if (!(this.firebaseUiConfig as FirebaseUIAuthConfig).providers) {\n      if (!(this.firebaseUiConfig as NativeFirebaseUIAuthConfig).callbacks) {\n        this._firebaseUiConfig[FirebaseuiAngularLibraryComponent.COMPUTED_CALLBACKS] = true;\n        (this._firebaseUiConfig as NativeFirebaseUIAuthConfig).callbacks = this.getCallbacks();\n      }\n      return (this.firebaseUiConfig as NativeFirebaseUIAuthConfig);\n    }\n\n    const authConfig: FirebaseUIAuthConfig = (this.firebaseUiConfig as FirebaseUIAuthConfig);\n\n    const authProviders: Array<any> = [];\n    for (let provider of authConfig.providers) {\n      if (!!(provider as AuthProviderWithCustomConfig).customConfig) {\n        provider = (provider as AuthProviderWithCustomConfig);\n\n        const providerWithConfig = provider.customConfig;\n        providerWithConfig['provider'] = FirebaseuiAngularLibraryComponent.getAuthProvider(provider.provider);\n\n        authProviders.push(providerWithConfig);\n      } else {\n        authProviders.push(FirebaseuiAngularLibraryComponent.getAuthProvider(provider as AuthProvider));\n      }\n    }\n\n    const tosURL = authConfig.tos ? authConfig.tos : '';\n    const privacyPolicyUrl = authConfig.privacyPolicyUrl ? authConfig.privacyPolicyUrl : '';\n\n    let authMethod = 'popup';\n    switch (authConfig.method) {\n      case AuthMethods.Redirect:\n        authMethod = 'redirect';\n        break;\n      case null:\n      case AuthMethods.Popup:\n      default:\n        break;\n    }\n\n    let credentialHelper;\n    switch (authConfig.credentialHelper) {\n      case CredentialHelper.None:\n        credentialHelper = this.firebaseuiLibrary.auth.CredentialHelper.NONE;\n        break;\n      case CredentialHelper.OneTap:\n        credentialHelper = this.firebaseuiLibrary.auth.CredentialHelper.GOOGLE_YOLO;\n        break;\n      case CredentialHelper.AccountChooser:\n      default:\n        credentialHelper = this.firebaseuiLibrary.auth.CredentialHelper.ACCOUNT_CHOOSER_COM;\n        break;\n    }\n\n    const autoUpgradeAnonymousUsers = authConfig.autoUpgradeAnonymousUsers == null ? false : authConfig.autoUpgradeAnonymousUsers;\n\n    const signInSuccessCallback = (currentUser: firebase.User, credential: firebase.auth.AuthCredential, redirectUrl: string) => {\n      this.ngZone.run(() => {\n        this.signInSuccessCallback.emit({\n          currentUser,\n          credential,\n          redirectUrl\n        });\n      });\n      return !!authConfig.signInSuccessUrl;\n    };\n\n    const callbacks: any = {\n      ...this.getCallbacks(),\n      signInSuccess: null\n    };\n\n    if (!authConfig.disableSignInSuccessCallback) {\n      console.warn('[FirebaseUiAngular] signInSuccess callback is deprecated. Please use signInSuccessWithAuthResult callback instead.\\n' +\n        'To remove this warning set disableSignInSuccessCallback on the FirebaseUiConfig Object.');\n      callbacks.signInSuccess = signInSuccessCallback;\n    }\n\n    const nativeConfiguration: NativeFirebaseUIAuthConfig = {\n      callbacks: callbacks,\n      signInFlow: authMethod,\n      signInOptions: authProviders,\n      tosUrl: tosURL,\n      privacyPolicyUrl: privacyPolicyUrl,\n      credentialHelper: credentialHelper,\n      autoUpgradeAnonymousUsers: autoUpgradeAnonymousUsers\n    };\n    if (!!authConfig.signInSuccessUrl) {\n      nativeConfiguration.signInSuccessUrl = authConfig.signInSuccessUrl;\n    }\n    return nativeConfiguration;\n  }\n\n  private async firebaseUIPopup() {\n    const firebaseUiInstance = await this.firebaseUIService.getInstance( this.language );\n\n    const uiAuthConfig = this.getUIAuthConfig();\n\n    // Check if callbacks got computed to reset them again after providing the to firebaseui.\n    // Necessary for allowing updating the firebaseui config during runtime.\n    let resetCallbacks = false;\n    if (uiAuthConfig[FirebaseuiAngularLibraryComponent.COMPUTED_CALLBACKS]) {\n      resetCallbacks = true;\n      delete uiAuthConfig[FirebaseuiAngularLibraryComponent.COMPUTED_CALLBACKS];\n    }\n\n    // show the firebaseui\n    firebaseUiInstance.start('#firebaseui-auth-container', uiAuthConfig);\n\n    if (resetCallbacks) {\n      (this._firebaseUiConfig as NativeFirebaseUIAuthConfig).callbacks = null;\n    }\n  }\n\n  private getCallbacks(): any {\n    const signInSuccessWithAuthResult = (authResult: UserCredential, redirectUrl) => {\n      this.ngZone.run(() => {\n        this.signInSuccessWithAuthResultCallback.emit({\n          authResult,\n          redirectUrl\n        });\n      });\n      return this.firebaseUiConfig.signInSuccessUrl;\n    };\n\n    const signInFailureCallback = (error: firebaseuiEn.auth.AuthUIError) => {\n      this.ngZone.run(() => {\n        this.signInFailureCallback.emit({\n          code: error.code,\n          credential: error.credential\n        });\n      });\n      return Promise.reject();\n    };\n\n    return {\n      signInSuccessWithAuthResult: signInSuccessWithAuthResult,\n      signInFailure: signInFailureCallback,\n    };\n  }\n\n  private getNewConfigurationString(configuration: NativeFirebaseUIAuthConfig): string {\n    delete configuration.callbacks;\n\n    if (!configuration.autoUpgradeAnonymousUsers) {\n      delete configuration.autoUpgradeAnonymousUsers;\n    }\n\n    let stringifiedConfiguration = JSON.stringify(configuration, null, 2);\n    /* tslint:disable */\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"credentialHelper\": \"accountchooser.com\"', '\"credentialHelper\": firebaseui.auth.CredentialHelper.ACCOUNT_CHOOSER_COM');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"credentialHelper\": \"googleyolo\"', '\"credentialHelper\": firebaseui.auth.CredentialHelper.GOOGLE_YOLO');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"credentialHelper\": \"none\"', '\"credentialHelper\": firebaseui.auth.CredentialHelper.NONE');\n\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"provider\": \"google.com\"', '\"provider\": firebase.auth.GoogleAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"provider\": \"facebook.com\"', '\"provider\": firebase.auth.FacebookAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"provider\": \"twitter.com\"', '\"provider\": firebase.auth.TwitterAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"provider\": \"github.com\"', '\"provider\": firebase.auth.GithubAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"provider\": \"password\"', '\"provider\": firebase.auth.EmailAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"provider\": \"phone\"', '\"provider\": firebase.auth.PhoneAuthProvider.PROVIDER_ID');\n\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"google.com\"', 'firebase.auth.GoogleAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"facebook.com\"', 'firebase.auth.FacebookAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"twitter.com\"', 'firebase.auth.TwitterAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"github.com\"', 'firebase.auth.TwitterAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"password\"', 'firebase.auth.EmailAuthProvider.PROVIDER_ID');\n    stringifiedConfiguration = stringifiedConfiguration.replace('\"phone\"', 'firebase.auth.PhoneAuthProvider.PROVIDER_ID');\n\n    stringifiedConfiguration = stringifiedConfiguration.replace(/\"([a-zA-Z0-9]*)\": (.*)/g, '$1: $2');\n    stringifiedConfiguration = stringifiedConfiguration.replace(/\"/g, '\\'');\n    /* tslint:enable */\n    return stringifiedConfiguration;\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FirebaseuiAngularLibraryComponent} from './firebaseui-angular-library.component';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseUIAuthConfig, NativeFirebaseUIAuthConfig} from './firebaseui-angular-library.helper';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [FirebaseuiAngularLibraryComponent],\n  exports: [FirebaseuiAngularLibraryComponent]\n})\nexport class FirebaseUIModule {\n  static forRoot(firebaseUiAuthConfig: NativeFirebaseUIAuthConfig | FirebaseUIAuthConfig): ModuleWithProviders {\n    return {\n      ngModule: FirebaseUIModule,\n      providers: [\n        {provide: 'firebaseUIAuthConfig', useValue: firebaseUiAuthConfig},\n        {provide: 'firebaseUIAuthConfigFeature', useValue: {}}\n      ]\n    };\n  }\n\n  static forFeature(firebaseUIAuthConfig: NativeFirebaseUIAuthConfig | FirebaseUIAuthConfig | any): ModuleWithProviders {\n    return {\n      ngModule: FirebaseUIModule,\n      providers: [\n        {provide: 'firebaseUIAuthConfigFeature', useValue: firebaseUIAuthConfig}\n      ]\n    };\n  }\n}\n"],"names":["firebaseOriginal","firebase.auth","tslib_1.__values"],"mappings":"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"}